{"version":3,"sources":["Dashboard/duck/duck.js","Dashboard/duck/api.js","Dashboard/duck/epics.js","Dashboard/listItems.js","Dashboard/Title.js","Dashboard/Deposits.js","Dashboard/Dashboard.js","App.js","serviceWorker.js","rootReducer.js","store.js","index.js","logo.svg"],"names":["initialDeposits","deposit","deposits","initialErrors","errors","BASE_URL","fetchDeposits","payload","axios","get","fetchDeposit","id","fetchErrors","watchDeposits","watchDeposit","watchErrors","rootSaga","call","Api","response","put","type","data","takeEvery","all","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","Title","props","Typography","component","variant","color","gutterBottom","children","useStyles","makeStyles","theme","seeMore","marginTop","spacing","red","blue","Deposits","classes","refresh","Fragment","length","reduce","acc","amount","calculateTotal","Button","onClick","Table","size","TableHead","TableRow","TableCell","align","TableBody","reverse","slice","map","row","key","className","date","Copyright","Link","href","Date","getFullYear","DashboardBase","state","open","handleDrawerOpen","bind","handleDrawerClose","this","setState","clsx","paper","fixedHeight","root","CssBaseline","AppBar","position","appBar","appBarShift","Toolbar","toolbar","IconButton","edge","aria-label","menuButton","menuButtonHidden","noWrap","title","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","Divider","List","content","appBarSpacer","Container","maxWidth","container","Grid","item","xs","Paper","Box","pt","React","Component","mapActions","Dashboard","compose","withStyles","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","breakpoints","up","height","overflow","paddingTop","paddingBottom","flexDirection","connect","console","log","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"wKAOMA,EAAkB,CACtBC,QAAS,GACTC,SAAU,IAcZ,IAAMC,EAAgB,CACpBC,OAAQ,IAcH,I,0CCpCDC,EAAW,wBAEV,SAASC,EAAcC,GAC5B,OAAOC,IAAMC,IAAN,UAAaJ,EAAb,SAGF,SAASK,EAAaC,GAC3B,OAAOH,IAAMC,IAAN,UAAaJ,EAAb,gBAA6BM,IAG/B,SAASC,IACd,OAAOJ,IAAMC,IAAN,UAAaJ,EAAb,gB,eCFQC,G,WAOAO,G,WAIAH,G,WAOAI,G,WAIAF,G,WAOAG,G,WAIAC,GAjCV,SAAUV,IAAV,uEAEc,OAFd,kBAEoBW,YAAKC,GAFzB,OAGH,OADMC,EAFH,gBAGGC,YFwB+B,CACvCC,KAvC0B,eAwC1Bd,QE1BwBY,EAASG,OAH5B,4GAOA,SAAUT,IAAV,iEACL,OADK,SACCU,YFlBsB,iBEkBIjB,GAD3B,uCAIA,SAAUI,IAAV,uEAEc,OAFd,kBAEoBO,YAAKC,GAFzB,OAGH,OADMC,EAFH,gBAGGC,YFsB8B,CACtCC,KA9CyB,cA+CzBd,QExBuBY,EAASG,OAH3B,4GAOA,SAAUR,IAAV,iEACL,OADK,SACCS,YF3BqB,gBE2BIb,GAD1B,uCAIA,SAAUE,IAAV,uEAEc,OAFd,kBAEoBK,YAAKC,GAFzB,OAGH,OADMC,EAFH,gBAGGC,YFoB6B,CACrCC,KArDwB,aAsDxBd,QEtBsBY,EAASG,OAH1B,4GAOA,SAAUP,IAAV,iEACL,OADK,SACCQ,YFpCoB,cEoCIX,GADzB,uCAIA,SAAUI,IAAV,iEACL,OADK,SACCQ,YAAI,CACRX,IACAC,IACAC,MAJG,uC,kSChCMU,GACX,6BACE,kBAACC,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,gB,sECdb,SAASC,GAAMC,GAC5B,OACE,kBAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAUC,cAAY,GACjEL,EAAMM,UCab,IAAMC,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,UAAWF,EAAMG,QAAQ,IAE3BC,IAAK,CACHT,MAAO,cAETU,KAAM,CACJV,MAAO,YAII,SAASW,GAASf,GAC/B,IAAMgB,EAAUT,KACTrC,EAAqB8B,EAArB9B,SAAU+C,EAAWjB,EAAXiB,QAMjB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACnB,GAAD,kBAAkB7B,EAASiD,OAA3B,KACA,kBAACpB,GAAD,gBANmB,SAAC7B,GAAD,OACrBA,EAASkD,QAAO,SAACC,EAAKpD,GAAN,OAAkBA,EAAQqD,OAASD,IAAK,GAKtCE,CAAerD,IAC/B,kBAACsD,GAAA,EAAD,CAAQrB,QAAQ,YAAYC,MAAM,UAAUqB,QAASR,GAArD,WACA,kBAACS,GAAA,EAAD,CAAOC,KAAK,SACV,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,SAAjB,iBAGJ,kBAACC,GAAA,EAAD,KACG9D,EAAS+D,UAAUC,MAAM,EAAG,IAAIC,KAAI,SAACC,GAAD,OACnC,kBAACP,GAAA,EAAD,CAAUQ,IAAKD,EAAIzD,IACjB,kBAACmD,GAAA,EAAD,CAAWQ,UAAwB,UAAbF,EAAI/C,KAAmB2B,EAAQH,IAAMG,EAAQF,MAAOsB,EAAIG,MAC9E,kBAACT,GAAA,EAAD,CAAWQ,UAAwB,UAAbF,EAAI/C,KAAmB2B,EAAQH,IAAMG,EAAQF,MAAOsB,EAAI/C,MAC9E,kBAACyC,GAAA,EAAD,CACEC,MAAM,QACNO,UAAwB,UAAbF,EAAI/C,KAAmB2B,EAAQH,IAAMG,EAAQF,MAEvDsB,EAAId,eCnCrB,SAASkB,KACP,OACE,kBAACvC,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgB2B,MAAM,UACrD,kBACD,kBAACU,GAAA,EAAD,CAAMrC,MAAM,UAAUsC,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,KAKP,IAiFMC,G,kDACJ,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IACD8C,MAAQ,CACXC,MAAM,GAER,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBANR,E,+DAUjBE,KAAKC,SAAS,CAAEL,MAAM,M,0CAItBI,KAAKC,SAAS,CAAEL,MAAM,M,+BAGd,IAAD,EACsCI,KAAKnD,MAA1CgB,EADD,EACCA,QAAS9C,EADV,EACUA,SAAUI,EADpB,EACoBA,cACF+E,YAAKrC,EAAQsC,MAAOtC,EAAQuC,aAErD,OACE,yBAAKjB,UAAWtB,EAAQwC,MACtB,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,WAAWrB,UAAWe,YAAKrC,EAAQ4C,OAAQT,KAAKL,MAAMC,MAAQ/B,EAAQ6C,cACrF,kBAACC,EAAA,EAAD,CAASxB,UAAWtB,EAAQ+C,SAC1B,kBAACC,EAAA,EAAD,CACEC,KAAK,QACL7D,MAAM,UACN8D,aAAW,cACXzC,QAAS0B,KAAKH,iBACdV,UAAWe,YAAKrC,EAAQmD,WAAYhB,KAAKL,MAAMC,MAAQ/B,EAAQoD,mBAE/D,kBAAC,KAAD,OAEF,kBAACnE,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAUiE,QAAM,EAAC/B,UAAWtB,EAAQsD,OAAlF,eAKJ,kBAACC,EAAA,EAAD,CACEpE,QAAQ,YACRa,QAAS,CACPsC,MAAOD,YAAKrC,EAAQwD,aAAcrB,KAAKL,MAAMC,MAAQ/B,EAAQyD,mBAE/D1B,KAAMI,KAAKL,MAAMC,MAEjB,yBAAKT,UAAWtB,EAAQ0D,aACtB,kBAACV,EAAA,EAAD,CAAYvC,QAAS0B,KAAKD,mBACxB,kBAAC,KAAD,QAGJ,kBAACyB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KAAOnF,KAET,0BAAM6C,UAAWtB,EAAQ6D,SACvB,yBAAKvC,UAAWtB,EAAQ8D,eACxB,kBAACC,EAAA,EAAD,CAAWC,SAAS,KAAK1C,UAAWtB,EAAQiE,WAC1C,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACrE,QAAS,GACvB,kBAACsE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,GAAA,EAAD,CAAO/C,UAAWtB,EAAQsC,OACxB,kBAACvC,GAAD,CAAU7C,SAAUA,EAAU+C,QAAS,kBAAM3C,UAInD,kBAACgH,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC/C,GAAD,Y,0CASVW,KAAKnD,MAAM1B,oB,GA5EakH,IAAMC,WAuF5BC,GAAa,CACjBpH,cNtK2B,iBAAO,CAClCe,KA3C4B,oBMmNxBsG,GAAYC,YAChBC,aA3Ka,SAACpF,GAAD,MAAY,CACzB+C,KAAM,CACJsC,QAAS,QAEX/B,QAAS,CACPgC,aAAc,IAEhBrB,YAAY,aACVoB,QAAS,OACTE,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNzF,EAAM0F,OAAOpC,SAElBH,OAAQ,CACNwC,OAAQ3F,EAAM2F,OAAOC,OAAS,EAC9BC,WAAY7F,EAAM8F,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhG,EAAM8F,YAAYE,OAAOC,MACjCC,SAAUlG,EAAM8F,YAAYI,SAASC,iBAGzC/C,YAAa,CACXgD,WAxBgB,IAyBhBC,MAAM,eAAD,OAzBW,IAyBX,OACLR,WAAY7F,EAAM8F,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhG,EAAM8F,YAAYE,OAAOC,MACjCC,SAAUlG,EAAM8F,YAAYI,SAASI,kBAGzC5C,WAAY,CACV6C,YAAa,IAEf5C,iBAAkB,CAChB0B,QAAS,QAEXxB,MAAO,CACL2C,SAAU,GAEZzC,YAAa,CACXb,SAAU,WACVuD,WAAY,SACZJ,MA3CgB,IA4ChBR,WAAY7F,EAAM8F,YAAYC,OAAO,QAAS,CAC5CC,OAAQhG,EAAM8F,YAAYE,OAAOC,MACjCC,SAAUlG,EAAM8F,YAAYI,SAASI,kBAGzCtC,iBAAiB,aACf0C,UAAW,SACXb,WAAY7F,EAAM8F,YAAYC,OAAO,QAAS,CAC5CC,OAAQhG,EAAM8F,YAAYE,OAAOC,MACjCC,SAAUlG,EAAM8F,YAAYI,SAASC,gBAEvCE,MAAOrG,EAAMG,QAAQ,IACpBH,EAAM2G,YAAYC,GAAG,MAAQ,CAC5BP,MAAOrG,EAAMG,QAAQ,KAGzBkE,aAAcrE,EAAM0F,OAAOpC,QAC3Bc,QAAS,CACPoC,SAAU,EACVK,OAAQ,QACRC,SAAU,QAEZtC,UAAW,CACTuC,WAAY/G,EAAMG,QAAQ,GAC1B6G,cAAehH,EAAMG,QAAQ,IAE/B0C,MAAO,CACL4C,QAASzF,EAAMG,QAAQ,GACvBkF,QAAS,OACTyB,SAAU,OACVG,cAAe,UAEjBnE,YAAa,CACX+D,OAAQ,SAiGVK,aAbe,SAAC7E,GAEhB,OADA8E,QAAQC,IAAI/E,GACL,CACL5E,SAAU4E,EAAM5E,SAASA,YAUTwH,IAFFE,CAGhB/C,IC1MaiF,OARf,WACE,OACE,yBAAKxF,UAAU,OACb,kBAAC,GAAD,QCIcyF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aCfOC,GAAcC,YAAgB,CACzCnK,STQK,WAAoD,IAAlC4E,EAAiC,uDAAzB9E,EAAiBsK,EAAQ,uCACxD,OAAOA,EAAOjJ,MACZ,IAdwB,eAetB,OAAO,eAAKyD,EAAZ,CAAmB5E,SAAUoK,EAAO/J,UACtC,IAduB,cAerB,OAAO,eAAKuE,EAAZ,CAAmB7E,QAASqK,EAAO/J,UACrC,QACE,OAAOuE,ISfD1E,OTuBL,WAAgD,IAAhC0E,EAA+B,uDAAvB3E,EAAemK,EAAQ,uCACpD,OAAQA,EAAOjJ,MACb,IAzBsB,aA0BpB,OAAO,eAAKyD,EAAZ,CAAmB1E,OAAQkK,EAAO/J,UACpC,QACE,OAAOuE,MU1BPyF,GAAiBC,eAEVC,GAAQC,YAAYN,GAAaO,YAAgBJ,KAE9DA,GAAeK,IAAI5J,GCDnB6J,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,IAAMM,WAAP,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,SHoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7B,QAAQ6B,MAAMA,EAAMC,a,6EIzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.d21a0d13.chunk.js","sourcesContent":["export const GET_DEPOSITS = 'get_deposits';\nexport const FETCH_DEPOSITS = 'fetch_deposits';\nexport const GET_DEPOSIT = 'get_deposit';\nexport const FETCH_DEPOSIT = 'fetch_deposit';\nexport const GET_ERRORS = 'get_errors';\nexport const FETCH_ERRORS = 'fetch_error';\n\nconst initialDeposits = {\n  deposit: {},\n  deposits: []\n};\n\nexport function deposits(state = initialDeposits, action) {\n  switch(action.type) {\n    case GET_DEPOSITS:\n      return { ...state, deposits: action.payload }\n    case GET_DEPOSIT:\n      return { ...state, deposit: action.payload }\n    default:\n      return state;\n  }\n}\n\nconst initialErrors = {\n  errors: []\n};\n\nexport function errors(state = initialErrors, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return { ...state, errors: action.payload }\n    default:\n      return state\n  }\n}\n\n// Actions\n\nexport const getDeposits = (payload) => ({\n  type: GET_DEPOSITS,\n  payload\n});\n\nexport const fetchDeposits = () => ({\n  type: FETCH_DEPOSITS,\n});\n\nexport const getDeposit = (payload) => ({\n  type: GET_DEPOSIT,\n  payload\n});\n\nexport const fetchDeposit = () => ({\n  type: FETCH_DEPOSIT\n});\n\nexport const getErrors = (payload) => ({\n  type: GET_ERRORS,\n  payload\n});\n\nexport const fetchErrors = () => ({\n  type: FETCH_ERRORS\n});\n","import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:3000';\n\nexport function fetchDeposits(payload) {\n  return axios.get(`${BASE_URL}/api`);\n}\n\nexport function fetchDeposit(id) {\n  return axios.get(`${BASE_URL}/api/${id}`);\n}\n\nexport function fetchErrors() {\n  return axios.get(`${BASE_URL}/api/errors`);\n}\n","import { put, takeEvery, all, call } from 'redux-saga/effects';\nimport {\n  FETCH_DEPOSITS,\n  FETCH_DEPOSIT,\n  FETCH_ERRORS,\n  getDeposits,\n  getDeposit,\n  getErrors,\n} from './duck';\nimport * as Api from './api';\n\nexport function* fetchDeposits() {\n  try {\n    const response = yield call(Api.fetchDeposits)\n    yield put(getDeposits(response.data));\n  } catch(e) {}\n}\n\nexport function* watchDeposits() {\n  yield takeEvery(FETCH_DEPOSITS, fetchDeposits);\n}\n\nexport function* fetchDeposit() {\n  try {\n    const response = yield call(Api.fetchDeposit)\n    yield put(getDeposit(response.data));\n  } catch(e) {}\n}\n\nexport function* watchDeposit() {\n  yield takeEvery(FETCH_DEPOSIT, fetchDeposit);\n}\n\nexport function* fetchErrors() {\n  try {\n    const response = yield call(Api.fetchErrors)\n    yield put(getErrors(response.data));\n  } catch(e) {}\n}\n\nexport function* watchErrors() {\n  yield takeEvery(FETCH_ERRORS, fetchErrors)\n}\n\nexport function* rootSaga() {\n  yield all([\n    watchDeposits(),\n    watchDeposit(),\n    watchErrors()\n  ])\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n  red: {\n    color: 'darkorange'\n  },\n  blue: {\n    color: 'blue'\n  }\n}));\n\nexport default function Deposits(props) {\n  const classes = useStyles();\n  const {deposits, refresh} = props;\n\n  // TODO value should be provided by API\n  const calculateTotal = (deposits) =>\n    deposits.reduce((acc, deposit) => deposit.amount + acc, 0);\n\n  return (\n    <React.Fragment>\n      <Title>Deposits ({deposits.length})</Title>\n      <Title>Total: ${calculateTotal(deposits)}</Title>\n      <Button variant=\"contained\" color=\"primary\" onClick={refresh}>Refresh</Button>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Type</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {deposits.reverse().slice(0, 50).map((row) => (\n            <TableRow key={row.id}>\n              <TableCell className={row.type === \"DEBIT\" ? classes.red : classes.blue}>{row.date}</TableCell>\n              <TableCell className={row.type === \"DEBIT\" ? classes.red : classes.blue}>{row.type}</TableCell>\n              <TableCell\n                align=\"right\"\n                className={row.type === \"DEBIT\" ? classes.red : classes.blue}\n              >\n                {row.amount}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems } from './listItems';\nimport Deposits from './Deposits';\nimport { fetchDeposits } from './';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n});\n\nclass DashboardBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n    this.handleDrawerClose = this.handleDrawerClose.bind(this);\n  }\n\n  handleDrawerOpen() {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    const { classes, deposits, fetchDeposits } = this.props;\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, this.state.open && classes.appBarShift)}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={clsx(classes.menuButton, this.state.open && classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              Dashboard\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n          }}\n          open={this.state.open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{mainListItems}</List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                  <Deposits deposits={deposits} refresh={() => fetchDeposits()} />\n                </Paper>\n              </Grid>\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.props.fetchDeposits();\n  }\n}\n\nconst mapState = (state) => {\n  console.log(state);\n  return {\n    deposits: state.deposits.deposits\n  }\n}\n\nconst mapActions = {\n  fetchDeposits\n}\n\nconst Dashboard = compose(\n  withStyles(styles),\n  connect(mapState, mapActions)\n)(DashboardBase);\n\nexport {Dashboard, DashboardBase};\n","import React from 'react';\nimport logo from './logo.svg';\n\nimport { Dashboard } from './Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\nimport { deposits, errors } from './Dashboard';\n\nexport const rootReducer = combineReducers({\n  deposits, errors\n});\n","import {createStore, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport {rootReducer} from './rootReducer';\nimport {rootSaga} from './Dashboard';\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\nimport {store} from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}