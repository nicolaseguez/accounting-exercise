{"version":3,"sources":["Dashboard/duck/duck.js","Dashboard/duck/api.js","Dashboard/duck/epics.js","Dashboard/listItems.js","Dashboard/Title.js","Dashboard/utils.js","Dashboard/Deposits.js","Dashboard/Dashboard.js","App.js","serviceWorker.js","rootReducer.js","store.js","index.js","logo.svg"],"names":["initialDeposits","deposits","initialBalance","balance","fetchDeposits","payload","axios","get","fetchBalance","watchDeposits","watchBalance","rootSaga","call","Api","response","put","type","data","takeEvery","all","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","Title","props","Typography","component","variant","color","gutterBottom","children","getFormatedAmount","amount","Intl","NumberFormat","style","currency","format","useStyles","makeStyles","theme","seeMore","marginTop","spacing","red","blue","Deposits","classes","refresh","console","log","Fragment","length","Button","onClick","List","aria-labelledby","subheader","ListSubheader","id","className","root","slice","map","deposit","key","Deposit","React","useState","open","setOpen","Divider","Collapse","in","timeout","unmountOnExit","disablePadding","nested","moment","Copyright","align","Link","href","Date","getFullYear","DashboardBase","state","handleDrawerOpen","bind","handleDrawerClose","this","setState","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","toolbar","IconButton","edge","aria-label","menuButton","menuButtonHidden","noWrap","title","Drawer","paper","drawerPaper","drawerPaperClose","toolbarIcon","content","appBarSpacer","Container","maxWidth","container","Grid","item","xs","Paper","Box","pt","Component","mapActions","Dashboard","compose","withStyles","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","breakpoints","up","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","connect","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.fa932977.chunk.js","sourcesContent":["export const GET_DEPOSITS = 'get_deposits';\nexport const FETCH_DEPOSITS = 'fetch_deposits';\nexport const GET_DEPOSIT = 'get_deposit';\nexport const FETCH_DEPOSIT = 'fetch_deposit';\nexport const GET_BALANCE = 'get_balance';\nexport const FETCH_BALANCE = 'fetch_balance';\n\nconst initialDeposits = {\n  deposits: []\n};\n\nexport function deposits(state = initialDeposits, action) {\n  switch(action.type) {\n    case GET_DEPOSITS:\n      return { ...state, deposits: action.payload };\n    default:\n      return state;\n  }\n}\n\nconst initialBalance = { balance: 0 };\n\nexport function balance(state = initialBalance, action) {\n  switch(action.type) {\n    case GET_BALANCE:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\n// Actions\n\nexport const getDeposits = (payload) => ({\n  type: GET_DEPOSITS,\n  payload\n});\n\nexport const fetchDeposits = () => ({\n  type: FETCH_DEPOSITS,\n});\n\nexport const getDeposit = (payload) => ({\n  type: GET_DEPOSIT,\n  payload\n});\n\nexport const fetchDeposit = () => ({\n  type: FETCH_DEPOSIT\n});\n\nexport const fetchBalance = () => ({\n  type: FETCH_BALANCE\n});\n\nexport const getBalance = (payload) => ({\n  type: GET_BALANCE,\n  payload\n});\n","import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:3000';\n\nexport function fetchDeposits(payload) {\n  return axios.get(`${BASE_URL}/api/transactions`);\n}\n\nexport function fetchBalance() {\n  return axios.get(`${BASE_URL}/api`)\n}\n","import { put, takeEvery, all, call } from 'redux-saga/effects';\nimport {\n  FETCH_DEPOSITS,\n  FETCH_BALANCE,\n  getDeposits,\n  getBalance,\n} from './duck';\nimport * as Api from './api';\n\nexport function* fetchDeposits() {\n  try {\n    const response = yield call(Api.fetchDeposits)\n    yield put(getDeposits(response.data));\n  } catch(e) {}\n}\n\nexport function* watchDeposits() {\n  yield takeEvery(FETCH_DEPOSITS, fetchDeposits);\n}\n\nexport function* fetchBalance() {\n  try {\n    const response = yield call(Api.fetchBalance);\n    yield put(getBalance(response.data));\n  } catch(e) {}\n}\n\nexport function* watchBalance() {\n  yield takeEvery(FETCH_BALANCE, fetchBalance)\n}\n\nexport function* rootSaga() {\n  yield all([\n    watchDeposits(),\n    watchBalance()\n  ])\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","export const getFormatedAmount = (amount) => \n  new Intl.NumberFormat('en-US', { style: \"currency\", currency: \"USD\" }).format(amount)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport moment from 'moment';\nimport Title from './Title';\nimport { getFormatedAmount } from './utils';\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n  red: {\n    color: 'darkorange'\n  },\n  blue: {\n    color: 'blue'\n  }\n}));\n\nexport default function Deposits(props) {\n  const classes = useStyles();\n  const {deposits, balance, refresh} = props;\n\n  // TODO value should be provided by API\n  const calculateTotal = (deposits) =>\n    deposits.reduce((acc, deposit) => deposit.amount + acc, 0);\n\n  console.log(\"HERE\", deposits);\n\n  return (\n    <React.Fragment>\n      <Title>Deposits ({deposits.length})</Title>\n      <Title>Total: {getFormatedAmount(balance)}</Title>\n      <Button variant=\"contained\" color=\"primary\" onClick={refresh}>Refresh</Button>\n      <List\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n            Nested List Items\n          </ListSubheader>\n        }\n        className={classes.root}\n      >\n       { deposits.slice(0, 100).map(deposit => <Deposit key={deposit.id} deposit={deposit} />) }\n      </List>\n    </React.Fragment>\n  );\n}\n\nconst Deposit = ({deposit}) => { \n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n\n  return (\n  <>         \n    <ListItem button onClick={handleClick}>\n      <Typography className={deposit.type === \"CREDIT\" ? classes.blue : classes.red }>\n        Type: {deposit.type} - Amount: {getFormatedAmount(deposit.amount)}\n      </Typography>\n      {open ? <ExpandLess /> : <ExpandMore />}\n    </ListItem>\n    <Divider />\n    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n      <List component=\"div\" disablePadding>\n        <ListItem button className={classes.nested}>\n          <List>\n            <ListItem>\n              <ListItemText><Typography variant=\"h6\">Id:</Typography> {deposit.id}</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText><Typography variant=\"h6\">Amount:</Typography> {deposit.amount}</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText><Typography variant=\"h6\">Type:</Typography> {deposit.type}</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText><Typography variant=\"h6\">Date:</Typography> {moment(deposit.data).format('MMMM Do YYYY, h:mm:ss a')}</ListItemText>\n            </ListItem>\n          </List>\n        </ListItem>\n      </List>\n    </Collapse>\n  </>);\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { mainListItems } from './listItems';\nimport Deposits from './Deposits';\nimport { fetchDeposits, fetchBalance } from './';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n});\n\nclass DashboardBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n    this.handleDrawerClose = this.handleDrawerClose.bind(this);\n    this.refresh = this.refresh.bind(this);\n  }\n\n  handleDrawerOpen() {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose() {\n    this.setState({ open: false });\n  }\n\n  refresh() {\n    this.props.fetchBalance();\n    this.props.fetchDeposits();\n  }\n  \n  render() {\n    const { classes, deposits, fetchDeposits, balance } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, this.state.open && classes.appBarShift)}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={clsx(classes.menuButton, this.state.open && classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              Dashboard\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n          }}\n          open={this.state.open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{mainListItems}</List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                  <Deposits deposits={deposits} balance={balance} refresh={this.refresh} />\n                </Paper>\n              </Grid>\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.props.fetchDeposits();\n    this.props.fetchBalance();\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    deposits: state.deposits.deposits,\n    balance: state.balance.balance\n  }\n}\n\nconst mapActions = {\n  fetchDeposits,\n  fetchBalance\n}\n\nconst Dashboard = compose(\n  withStyles(styles),\n  connect(mapState, mapActions)\n)(DashboardBase);\n\nexport {Dashboard, DashboardBase};\n","import React from 'react';\nimport logo from './logo.svg';\n\nimport { Dashboard } from './Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\nimport { deposits, balance } from './Dashboard';\n\nexport const rootReducer = combineReducers({\n  deposits,\n  balance\n});\n","import {createStore, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport {rootReducer} from './rootReducer';\nimport {rootSaga} from './Dashboard';\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\nimport {store} from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}